# Enable favorite colors
colorscheme desertex

# configure plug.kak
source "%val{config}/plugins/plug.kak/rc/plug.kak"

plug "andreyorst/plug.kak" branch "dev" noload
plug "ul/kak-lsp" do %{
    cargo install --locked --force --path .
    echo DONE
}
plug "golang/tools" noload do %{
    env --chdir=$HOME GO111MODULE=on go get -v golang.org/x/tools/gopls@latest
    echo DONE
}
plug "andreyorst/fzf.kak"
plug "whereswaldon/kakdown"
plug "whereswaldon/shellcheck.kak"
plug "whereswaldon/myrddin-kak"
plug "occivink/kakoune-gdb"
plug "occivink/kakoune-sudo-write"

set-option global aligntab false
set-option global tabstop 4
set-option global indentwidth 4
set-option global scrolloff 15,4
set-option global ui_options ncurses_set_title=false
require-module fzf
set-option global fzf_highlight_command "bat"
map -docstring "Interpret file as ledger file" global user L ':set window filetype ledger<ret>'

# implement tab using a hook
hook global InsertChar \t %{ try %{
      execute-keys -draft "h<a-h><a-k>\A\h+\z<ret><a-;>;%opt{indentwidth}@"
}}

hook global WinCreate .* %{
    # Always number lines
    add-highlighter window/ number-lines
    # Always soft-wrap lines
    add-highlighter window/ wrap -word -indent
}

# Easy way to open/edit config
map -docstring "edit kakrc" global user e :e<space>~/.config/kak/kakrc<ret>
map -docstring "source kakrc" global user s :source<space>~/.config/kak/kakrc<ret>
map -docstring "copy to X11 clipboard" global user c :xcopy<ret>
map -docstring "paste from X11 clipboard" global user v :xpaste<ret>
map -docstring "enter fzf mode" global user f ': fzf-mode<ret>'
map -docstring "jump to debug buffer" global user d ':b *debug*<ret>'

map -docstring "highlight references" global user h ':lsp-highlight-references<ret>'
map -docstring "rename symbol" global user r ':lsp-rename-prompt<ret>'
map -docstring "next reference" global user n ':lsp-references-next-match<ret>'
map -docstring "prev reference" global user p ':lsp-reference-previous-match<ret>'

define-command -override -docstring "copy main selection to X11 clipboard" xcopy %{
    nop %sh{ (echo -n "$kak_selection" | xclip -i -f -selection primary | xclip -i -selection clipboard) < /dev/null > /dev/null 2>&1 & }
}

define-command -override -docstring "paste X11 clipboard at cursor" xpaste %{
    exec \i %sh{ xclip -selection clipboard -o } <esc>
}

# Register custom hooks whenever I open a markdown file.
hook global WinSetOption filetype=markdown %{
    # Print in the debug buffer so that I can tell the hook fired
    echo -debug "Markdown Mode Enabled"
    # Create easy user-mode mapping to format tables
    map -docstring "format markdown table under cursor" buffer user t :md-format-table<ret>
    map -docstring "begin live-previewing this document in Firefox" buffer user p :md-preview<ret>
}

hook global WinSetOption filetype=go %{
    set window lintcmd 'golangci-lint run'
    lint-enable
    lsp-enable-window
    lsp-auto-hover-enable
    lsp-auto-signature-help-enable
    hook -group gofmt buffer BufWritePre .* %{
        go-format -use-goimports
        lint
    }
}
